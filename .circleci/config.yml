version: 2.1

orbs:
  win: circleci/windows@2.4.1
#  github-cli: circleci/github-cli@1.0.5

jobs:
  build:
    executor:
      name: win/default
      size: medium
      shell: bash
    steps:
      # https://wixtoolset.org/releases/
#      - run: curl -o "wix311.exe" "https://github.com/wixtoolset/wix3/releases/download/wix3112rtm/wix311.exe"
      # https://wixtoolset.org/releases/v3-14-0-5722/
      - run: curl -o "wix314.exe" "https://wixtoolset.org/downloads/v3.14.0.5722/wix314.exe"
      - run: ./wix314.exe /quiet
      - run: printenv
#      - run: printenv
#      - run: printenv
#      - run: printenv
#      - run: printenv
      - run: ls -laR "/c/Program Files (x86)/WiX Toolset v3.14/" || true
      - run: ps -A

# WIX=C:\Program Files (x86)\WiX Toolset v3.14\

# C:\Program Files (x86)\WiX Toolset v3.14\

# WiX Toolset requires the .NET Framework 3.5.1 Windows feature to be enabled

#      - github-cli/setup
#      - checkout
#      - run: rc.exe
#      - run: winres.exe

#      - run: ls -laR /c
#      - run: windres
#      - checkout
#      - run: curl -o "rustup-init.exe" "https://win.rustup.rs/"
#      - run: ./rustup-init.exe -y --default-toolchain "stable-x86_64-pc-windows-msvc" --profile minimal
#      - run: mkdir .cargo
#      - run: echo "[net]" >> .cargo/config.toml
#      - run: echo "git-fetch-with-cli = true" >> .cargo/config.toml
#      - run:
#          command: |
#            echo 'export PATH=$HOME/.cargo/bin:$PATH' >> $BASH_ENV
#      - run: ls -laR ..
#      - run: cargo build --locked --release --manifest-path ./Cargo.toml

#      - run: printenv
#      - run: ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete "0.0.1" ./target/release/gcip.exe
#      - run: ls -laR ..
#      - run: go get github.com/tcnksm/ghr
#      - run: ls -laR ..

#    docker:
#      - image: cimg/rust:1.57.0

#VERSION=$(my-binary --version)
#ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./artifacts/


#      - run:
#          command: rustc -Vv
#          shell: cmd

#      - run: rustc -Vv
#      - run: cargo --version

#      - run:
#          command: dir "C:/" /s
#          shell: cmd
   
#      - run:
#          command: 'Get-ChildItem env:'
#          shell: PowerShell
#      - run: ls / -laR
#      - run:
#          command: dir C:\ /s
#          shell: cmd
#      - checkout
#      - run: curl -o "rustup-init.exe" "https://win.rustup.rs/"
#      - run: ls -la
#      - run: ./rustup-init.exe -y --default-toolchain "stable-x86_64-pc-windows-msvc" --no-modify-path --profile minimal
#      - run: ls -la
#      - run:
#          command: |
#            $env:Path += ";C:\Users\circleci\.cargo\bin"
#          shell: PowerShell
#      - run: rustc -Vv
#      - run: cargo --version

#      - run: 'Write-Host ''Hello, Windows'''

# curl is faster
#      - run:
#          command: |
#            $ProgressPreference = "SilentlyContinue"
#            Invoke-WebRequest -Uri "https://win.rustup.rs/" -OutFile "rustup-init-2.exe"
#          shell: PowerShell

workflows:
  my-workflow:
    jobs:
      - build

#workflows:
#  version: 2
#  all_jobs:
#    jobs:
#      - job-linux-1
#      - job-windows-1
#      - job-windows-2
#
#jobs:
#  job-linux-1:
#    machine:
#      docker_layer_caching: false
#      image: ubuntu-2004:202008-01
#    steps:
#      - checkout
#      - run:
#          name: "download rustup-init"
#          command: |
#            curl --proto https --tlsv1.2 -sSf https://sh.rustup.rs --output rustup
#            chmod 770 ./rustup
#      - run:
#          name: "install Rust"
#          command: |
#            ./rustup -y -v --default-host x86_64-unknown-linux-gnu --default-toolchain stable --profile minimal
#      - run:
#          name: "compile release version"
#          command: |
#            cargo build --release
#      - store_artifacts:
#          path: ./target/release/gcip
#          destination: gcip-linux-1
#
#  job-windows-1:
#    executor: win/default
#    steps:
#      - checkout
#      - run:
#          name: "allow https when fetching from GitHub"
#          command: |
#            git config --global --unset url.ssh://git@github.com.insteadof
#      - run:
#          name: "install Rust the chocolatey way"
#          command: |
#            choco install rust-ms
#      - run:
#          name: "compile release version"
#          command: |
#            cargo build --release
#      - store_artifacts:
#          path: ./target/release/gcip.exe
#          destination: gcip-windows-1.exe
#
#  job-windows-2:
#    executor: win/default
#    steps:
#      - checkout
#      - run:
#          name: "allow https when fetching from GitHub"
#          command: |
#            git config --global --unset url.ssh://git@github.com.insteadof
#      - run:
#          name: "download rustup-init"
#          command: |
#            curl --proto https --tlsv1.2 -sSf https://win.rustup.rs/x86_64 --output rustup-init.exe
#          shell: bash.exe
#      - run:
#          name: "install Rust"
#          command: |
#            rustup-init -y -v --default-host x86_64-pc-windows-msvc --default-toolchain stable --profile minimal
#          shell: cmd.exe
#      - run:
#          name: "compile release version"
#          command: |
#            %USERPROFILE%\.cargo\bin\cargo build --release
#          shell: cmd.exe
#      - store_artifacts:
#          path: ./target/release/gcip.exe
#          destination: gcip-windows-2.exe
